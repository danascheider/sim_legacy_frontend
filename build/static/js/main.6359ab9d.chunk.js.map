{"version":3,"sources":["components/shoppingListItem/shoppingListItem.module.css","components/shoppingList/shoppingList.module.css","layouts/dashboardLayout.module.css","components/flashMessage/flashMessage.module.css","components/shoppingListForm/shoppingListForm.module.css","pages/homePage/homePage.module.css","pages/loginPage/loginPage.module.css","components/logoutDropdown/logoutDropdown.module.css","pages/shoppingListPage/shoppingListPage.module.css","components/navigationMosaic/navigationMosaic.module.css","pages/dashboardPage/dashboardPage.module.css","components/shoppingListPageContent/shoppingListPageContent.module.css","components/navigationCard/navigationCard.module.css","utils/config.js","utils/customErrors.js","utils/simApi.js","utils/logOutWithGoogle.js","utils/isStorybook.js","routing/paths.js","contexts/dashboardContext.js","utils/colorSchemes.js","contexts/colorContext.js","hooks/contexts.js","components/logoutDropdown/googleIcon.svg","components/logoutDropdown/logoutDropdown.js","components/dashboardHeader/anonymousAvatar.jpg","components/dashboardHeader/dashboardHeader.js","layouts/dashboardLayout.js","components/loading/loading.js","components/navigationCard/navigationCard.js","components/navigationMosaic/navigationMosaic.js","pages/dashboardPage/dashboardPage.js","components/flashMessage/flashMessage.js","hooks/useComponentVisible.js","components/shoppingListForm/shoppingListForm.js","components/shoppingListItem/shoppingListItem.js","components/shoppingList/shoppingList.js","components/shoppingListPageContent/shoppingListPageContent.js","pages/shoppingListPage/shoppingListPage.js","pages/homePage/homePage.js","pages/loginPage/loginPage.js","routing/pageRoutes.js","App.js","index.js","components/dashboardHeader/dashboardHeader.module.css"],"names":["module","exports","googleClientId","frontendBaseUri","sessionCookieName","AuthorizationError","message","instance","Error","name","Object","setPrototypeOf","getPrototypeOf","prototype","create","constructor","value","enumerable","writable","configurable","__proto__","baseUri","authHeader","token","contentTypeHeader","combinedHeaders","throwAuthErrorOn401","resp","status","json","then","data","error","defaultErrorCallback","err","console","logOutWithGoogle","success","window","gapi","auth2","GoogleAuth","getAuthInstance","signOut","isStorybook","process","STORYBOOK","paths","home","login","dashboard","main","shoppingLists","DONE","DashboardContext","createContext","DashboardProvider","children","overrideValue","useCookies","cookies","removeCookie","useState","profileData","setProfileData","shouldRedirectTo","setShouldRedirectTo","profileLoadState","setProfileLoadState","removeSessionCookie","shouldFetchProfileData","useEffect","uri","fetch","headers","fetchUserProfile","response","catch","Provider","to","YELLOW","schemeColor","hoverColor","borderColor","textColorPrimary","schemeColorLighter","hoverColorLighter","textColorSecondary","textColorTertiary","schemeColorLightest","PINK","BLUE","GREEN","AQUA","colorSchemes","ColorContext","ColorProvider","colorScheme","scheme","setScheme","useMemo","useCustomContext","cxt","msg","context","useContext","useColorScheme","useDashboardContext","LogoutDropdown","className","logOutUser","styles","button","onClick","body","googleLogout","src","icon","alt","DashboardHeader","dropdownVisible","setDropdownVisible","mountedRef","useRef","current","root","bar","headerContainer","header","headerLink","bp","profile","profileText","textTop","textBottom","email","avatar","image_url","anonymousAvatar","referrerPolicy","logoutDropdown","hidden","e","preventDefault","DashboardLayout","title","container","hr","Loading","type","color","height","width","NavigationCard","href","styleVars","style","NavigationMosaic","cardArray","map","key","card","cards","DashboardPage","loading","INFO","colors","border","text","FlashMessage","colorVars","messageList","index","useComponentVisible","isComponentVisible","setIsComponentVisible","componentRef","triggerRef","triggerRefContains","element","contains","handleHideDiv","handleClickOutside","target","document","addEventListener","removeEventListener","ShoppingListForm","formRef","onSubmit","getInputTextWidth","createElement","getContext","font","measureText","inputValue","setInputValue","inputWidth","setInputWidth","inputRef","focus","classnames","ref","input","stopPropagation","onChange","newValue","currentTarget","submit","fa","faCheckSquare","ShoppingListItem","description","quantity","notes","toggleEvent","setToggleEvent","Date","now","collapsed","setCollapsibleElement","collapsible","ShoppingList","canEdit","onSubmitEditForm","listItems","currentTitle","setCurrentTitle","slideTriggerRef","listItemColorScheme","titleTextColor","bodyBackgroundColor","bodyTextColor","shouldToggleListItems","slideTriggerRefContains","componentRefContains","titleContainer","trigger","faEdit","form","str","newTitle","nativeEvent","defaultValue","match","id","itemKey","toLowerCase","replace","ShoppingListPageContent","lists","length","noLists","master","shopping_list_items","colorSchemesIndex","listKey","shoppingList","LOADING","ERROR","ShoppingListPage","setShoppingLists","loadingState","setLoadingState","flashProps","setFlashProps","flashVisible","setFlashVisible","fetchShoppingLists","flash","listId","attrs","JSON","stringify","shopping_list","method","updateShoppingList","errors","newShoppingLists","list","HomePage","LoginPage","setCookie","loginErrorMessage","setLoginErrorMessage","errorMessage","clientId","buttonText","onSuccess","tokenId","authorize","onFailure","log","isSignedIn","redirectUri","siteTitle","pages","pageId","Component","path","PageRoutes","exact","lang","content","App","basename","ReactDOM","render","StrictMode","getElementById"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,KAAO,+BAA+B,gBAAkB,0CAA0C,OAAS,iCAAiC,SAAW,mCAAmC,YAAc,sCAAsC,YAAc,sCAAsC,MAAQ,kC,mBCA5TD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,KAAO,2BAA2B,MAAQ,4BAA4B,GAAK,yBAAyB,YAAc,oC,mBCA9MD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,MAAQ,+BAA+B,GAAK,4BAA4B,UAAY,qC,mBCA3ID,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,OAAS,6BAA6B,YAAc,kCAAkC,IAAM,4B,mBCAxLD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,OAAS,iCAAiC,GAAK,+B,mBCA/ID,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,OAAS,yBAAyB,MAAQ,0B,mBCAlID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,aAAe,gCAAgC,UAAY,6BAA6B,OAAS,4B,mBCAlJD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,aAAe,uC,mBCA7GD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,QAAU,kCAAkC,MAAQ,kC,mBCA9GD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,KAAO,iC,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,QAAU,iC,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,yCAAyC,aAAe,gD,mBCApFD,EAAOC,QAAU,CAAC,KAAO,+B,uJCDZC,EAEC,2EAQDC,EAEC,+BAGDC,EAAoB,sB,SCfpBC,EAAqB,WAAmC,IAAlCC,EAAiC,uDAAvB,mBACvCC,EAAW,IAAIC,MAAMF,GAIzB,OAHAC,EAASE,KAAO,qBAChBF,EAASD,QAAUA,EACnBI,OAAOC,eAAeJ,EAAUG,OAAOE,eAAe,IAC/CL,GAGTF,EAAmBQ,UAAYH,OAAOI,OAAON,MAAMK,UAAW,CAC5DE,YAAa,CACXC,MAAOR,MACPS,YAAY,EACZC,UAAU,EACVC,cAAc,KAIdT,OAAOC,eACTD,OAAOC,eAAeN,EAAoBG,OAE1CH,EAAmBe,UAAYZ,MCjBjC,I,EAAMa,EFIQ,mCEHRC,EAAa,SAAAC,GAAK,MAAK,CAAE,cAAgB,UAAhB,OAA2BA,KACpDC,EAAoB,CAAE,eAAgB,oBACtCC,EAAkB,SAAAF,GAAK,kCAAUD,EAAWC,IAAWC,IAEvDE,EAAsB,SAAAC,GACN,MAAhBA,EAAKC,QAAgBD,EAAKE,OAAOC,MAAK,SAAAC,GAAU,MAAM,IAAI1B,EAAmB0B,EAAKC,WCTlFC,EAAuB,SAAAC,GAC3BC,QAAQH,MAAM,sBAAuBE,EAAI5B,UAmB5B8B,EAhBU,WAAuD,IAAtDC,EAAqD,uDAA3C,aAAUL,EAAiC,uDAAzBC,EACpD,GAAIK,OAAOC,MAAQD,OAAOC,KAAKC,MAAO,CACpC,IAAMC,EAAaH,OAAOC,KAAKC,MAAME,kBAElB,OAAfD,EACFA,EACGX,MAAK,kBAAMW,EAAWE,aACtBb,KAAKO,EAASL,GAEjBK,IAIJA,KCfaO,EAFK,mBAASC,mIAAYC,WCS1BC,EATD,CACZC,KAAM,IACNC,MAAO,SACPC,UAAW,CACTC,KAAM,aACNC,cAAe,6B,OCabC,EAAO,OAEPC,EAAmBC,0BAOnBC,EAAoB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAmC,IAAzBC,qBAAyB,MAAT,GAAS,EAC9D,EAAkCC,YAAW,CAACvD,IAA9C,mBAAOwD,EAAP,KAAkBC,EAAlB,KACA,EAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgDF,mBAAS,MAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAgDJ,mBAdlC,WAcd,mBAAOK,EAAP,KAAyBC,EAAzB,KAEMC,EAAsB,kBAAMR,EAAazD,IAEzCY,EAAK,aACTO,MAAOqC,EAAQxD,GACf2D,cACAM,sBACAL,iBACAG,mBACAD,uBACGR,GAGCY,GAA0BZ,EAAcK,aAAeH,EAAQxD,GAyBrE,OAFAmE,qBArByB,WACnBD,EJZwB,SAAA/C,GAC9B,IAAMiD,EAAG,UAAMnD,EAAN,kBAET,OACEoD,MAAMD,EAAK,CAAEE,QAASpD,EAAWC,KAC9BO,MAAK,SAAAH,GAEJ,OADAD,EAAoBC,GACbA,KIMTgD,CAAiBf,EAAQxD,IACtB0B,MAAK,SAAA8C,GAAQ,OAAIA,EAAS/C,UAC1BC,MAAK,SAAAC,GACJiC,EAAejC,GACV2B,EAAcS,kBAAkBC,EAAoBf,MAE1DwB,OAAM,SAAA7C,GACLG,QAAQH,MAAM,+CAAgDA,EAAM1B,SAEpE8B,GAAiB,WACfwB,EAAQxD,IAAsBiE,IAC9BH,EAAoBnB,EAAME,aAGtBW,EAAQxD,IAAuBwC,IAEhCA,MAAkBc,EAAcS,kBAAkBC,EAAoBf,GAD/Ea,EAAoBnB,EAAME,SAIF,IAG1B,cAACK,EAAiBwB,SAAlB,CAA2B9D,MAAOA,EAAlC,SACGiD,EAAmB,cAAC,IAAD,CAAUc,GAAId,IAAuBR,KCxElDuB,EAAS,CACpBC,YAAa,UACbC,WAAY,UACZC,YAAa,UACbC,iBAAkB,UAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,UACnBC,oBAAqB,WAGVC,EAAO,CAClBT,YAAa,UACbC,WAAY,UACZC,YAAa,UACbC,iBAAkB,UAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,UACnBC,oBAAqB,WAGVE,EAAO,CAClBV,YAAa,UACbC,WAAY,UACZC,YAAa,UACbC,iBAAkB,UAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,UACnBC,oBAAqB,WAGVG,EAAQ,CACnBX,YAAa,UACbC,WAAY,UACZC,YAAa,UACbC,iBAAkB,UAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,UACnBC,oBAAqB,WAGVI,EAAO,CAClBZ,YAAa,UACbC,WAAY,UACZC,YAAa,UACbC,iBAAkB,UAClBC,mBAAoB,UACpBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,UACnBC,oBAAqB,WAWRK,EARM,CACnBd,EACAU,EACAC,EACAC,EACAC,GCtDIE,EAAexC,0BAEfyC,EAAgB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaxC,EAAe,EAAfA,SACpC,EAA4BK,mBAASmC,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMnF,EAAQoF,mBAAQ,iBAAM,CAACF,EAAQC,KAAY,CAACD,IAElD,OACE,cAACH,EAAajB,SAAd,CAAuB9D,MAAOA,EAAOiF,YAAaC,EAAlD,SACGzC,KCRD4C,EAAmB,SAACC,EAAKC,GAC7B,IAAMC,EAAUC,qBAAWH,GAE3B,IAAKE,EACH,MAAM,IAAIhG,MAAM+F,GAGlB,OAAOC,GAGIE,EAAiB,kBAC5BL,EAAiBN,EAAc,uDAGpBY,EAAsB,kBACjCN,EAAiB/C,EAAkB,gEC1BtB,MAA0B,uC,iBCuB1BsD,EAlBQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,WAAb,OACrB,qBAAKD,UAAWA,EAAhB,SACE,wBAAQA,UAAWE,IAAOC,OAAQC,QAASH,EAA3C,SACE,qBAAKD,UAAWE,IAAOG,KAAvB,SACE,sBAAKL,UAAWE,IAAOI,aAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,gBADtB,gCCTO,MAA0B,4C,gBC+D1BC,EAtDS,WACtB,MAKIZ,IAJFpF,EADF,EACEA,MACAwC,EAFF,EAEEA,YACAM,EAHF,EAGEA,oBACAH,EAJF,EAIEA,oBAGF,EAA8CJ,oBAAS,GAAvD,mBAAO0D,EAAP,KAAwBC,EAAxB,KACMC,EAAaC,kBAAO,GAkB1B,OAJApD,qBAAU,WACR,OAAO,kBAAOmD,EAAWE,SAAU,KAClC,IAGD,qBAAKf,UAAWE,IAAOc,KAAvB,SACE,sBAAKhB,UAAWE,IAAOe,IAAvB,UACE,sBAAMjB,UAAWE,IAAOgB,gBAAxB,SACE,oBAAIlB,UAAWE,IAAOiB,OAAtB,SACE,eAAC,IAAD,CAAMnB,UAAWE,IAAOkB,WAAYlD,GAAIhC,EAAMG,UAAUC,KAAxD,6BAA8E,oBAAI0D,UAAWE,IAAOmB,KAApG,qBAGDnE,EACH,yBAAQ8C,UAAWE,IAAOoB,QAASlB,QAAS,kBAAMQ,GAAoBD,IAAtE,UACE,sBAAKX,UAAWE,IAAOqB,YAAvB,UACE,mBAAGvB,UAAWE,IAAOsB,QAArB,SAA+BtE,EAAYtD,OAC3C,mBAAGoG,UAAWE,IAAOuB,WAArB,SAAkCvE,EAAYwE,WAEhD,qBAAK1B,UAAWE,IAAOyB,OAAQpB,IAAKrD,EAAY0E,WAAaC,EAAiBpB,IAAI,cAAcqB,eAAe,mBAEjH,KAEA,cAAC,EAAD,CACE9B,UAAWW,EAAkBT,IAAO6B,eAAiB7B,IAAO8B,OAC5D/B,WApCW,SAACgC,GAClBA,EAAEC,iBAEFtB,GAAmB,GAEnBrF,GAAiB,WACfb,GAAS8C,IACTH,EAAoBnB,EAAMC,MAC1B0E,EAAWE,SAAU,c,iBCDZoB,EAtBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOxF,EAAe,EAAfA,SAChC,OACE,sBAAKoD,UAAWE,IAAOc,KAAvB,UACE,sBAAKhB,UAAWE,IAAOmC,UAAvB,UACGD,EACD,qCACE,oBAAIpC,UAAWE,IAAOkC,MAAtB,SAA8BA,IAC9B,oBAAIpC,UAAWE,IAAOoC,QAExB,KACC1F,KAEH,cAAC,EAAD,Q,oBCWS2F,GAZC,SAAC,GAAD,IAAGvC,EAAH,EAAGA,UAAH,IAAcwC,YAAd,MAAqB,OAArB,EAA6BC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,OAAQC,EAA5C,EAA4CA,MAA5C,OACd,cAAC,KAAD,CAAc3C,UAAWA,EAAWwC,KAAMA,EAAMC,MAAOA,EAAOC,OAAQA,EAAQC,MAAOA,K,oBCUxEC,GArBQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMjG,EAAe,EAAfA,SAC9B,EAAuDiD,IAAvD,sBAEMiD,EAAY,CAChB,qBAHF,EAAS1E,YAIP,gBAJF,EAAsBC,WAKpB,eALF,EAAkCE,kBAQlC,OACE,cAAC,IAAD,CAAMyB,UAAWE,KAAOc,KAAM9C,GAAI2E,EAAME,MAAOD,EAA/C,SACGlG,K,oBCyBQoG,GApCU,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACvB,qBAAKjD,UAAWE,KAAOc,KAAvB,SACGiC,EAAUC,KAAI,gBAAG9D,EAAH,EAAGA,YAAayD,EAAhB,EAAgBA,KAAMjG,EAAtB,EAAsBA,SAAUuG,EAAhC,EAAgCA,IAAhC,OACb,qBAAenD,UAAWE,KAAOkD,KAAjC,SACE,cAAC,EAAD,CAAehE,YAAaA,EAA5B,SACE,cAAC,GAAD,CACEyD,KAAMA,EACNjG,SAAUA,OAJNuG,S,oBCOVE,GAAQ,CACZ,CACEjE,YAAajB,EACb0E,KAAM3G,EAAMG,UAAUE,cACtBK,SAAU,sBACVuG,IAAK,kBAEP,CACE/D,YAAaP,EACbgE,KAAM,IACNjG,SAAU,aACVuG,IAAK,cAEP,CACE/D,YAAaN,EACb+D,KAAM,IACNjG,SAAU,aACVuG,IAAK,cAEP,CACE/D,YAAaL,EACb8D,KAAM,IACNjG,SAAU,aACVuG,IAAK,cAEP,CACE/D,YAAaJ,EACb6D,KAAM,IACNjG,SAAU,aACVuG,IAAK,eAkBMG,GAdO,WACpB,MAAoCxD,IAA5BpF,EAAR,EAAQA,MAAO4C,EAAf,EAAeA,iBAEf,OAAO5C,EACL,cAAC,EAAD,UACwB,SAArB4C,EAA8B,qBAAK0C,UAAWE,KAAOc,KAAvB,SAC7B,cAAC,GAAD,CAAkBiC,UAAWI,OAE/B,cAAC,GAAD,CAASrD,UAAWE,KAAOqD,QAASf,KAAK,UAAUC,MAAOtE,EAAOC,YAAasE,OAAO,MAAMC,MAAM,UAEnG,cAAC,IAAD,CAAUzE,GAAIhC,EAAME,S,6BCvDlBoH,GAAO,OAIPC,IAAM,oBACTD,GAAO,CACNnD,KAAM,UACNqD,OAAQ,UACRC,KAAM,YAJE,eAHE,QASH,CACPtD,KAAM,UACNqD,OAAQ,UACRC,KAAM,YATE,eAFI,UAaH,CACTtD,KAAM,UACNqD,OAAQ,UACRC,KAAM,YAdE,GA4CGC,GA1BM,SAAC,GAAsC,IAAD,IAAnCpB,YAAmC,MAA5BgB,GAA4B,EAAtBrC,EAAsB,EAAtBA,OAAQ1H,EAAc,EAAdA,QACrCoK,EAAY,CAChB,eAAgBJ,GAAOjB,GAAMnC,KAC7B,iBAAkBoD,GAAOjB,GAAMkB,OAC/B,eAAgBD,GAAOjB,GAAMmB,MAG/B,OACE,sBAAK3D,UAAWE,KAAOc,KAAM+B,MAAOc,EAApC,UACG1C,GAAU,mBAAGnB,UAAWE,KAAOiB,OAArB,SAA8BA,IACrB,kBAAZ1H,EAAuBA,EAC/B,oBAAIuG,UAAWE,KAAO4D,YAAtB,SACGrK,EAAQyJ,KAAI,SAACxD,EAAKqE,GAAN,OAAgB,oBAA6B/D,UAAWE,KAAOR,IAA/C,SAAqDA,GAArD,kBAAoBqE,aCF1CC,GAlCa,WAC1B,MAAoD/G,oBAAS,GAA7D,mBAAOgH,EAAP,KAA2BC,EAA3B,KACMC,EAAerD,iBAAO,MACtBsD,EAAatD,iBAAO,MAGpBuD,EAAqB,SAAAC,GAAO,OAAIF,EAAWrD,SAAWqD,EAAWrD,QAAQwD,SAASD,IAElFE,EAAgB,SAAAvC,GACN,WAAVA,EAAEkB,KACJe,GAAsB,IAIpBO,EAAqB,SAAAxC,GATE,IAAAqC,IAUDrC,EAAEyC,OAVUP,EAAapD,SAAWoD,EAAapD,QAAQwD,SAASD,IAUpDD,EAAmBpC,EAAEyC,QAElDL,EAAmBpC,EAAEyC,SAC9BR,GAAuBD,GAFvBC,GAAsB,IAe1B,OATAxG,qBAAU,WAGR,OAFAiH,SAASC,iBAAiB,UAAWJ,GAAe,GACpDG,SAASC,iBAAiB,QAASH,GAAoB,GAChD,WACLE,SAASE,oBAAoB,UAAWL,GAAe,GACvDG,SAASE,oBAAoB,QAASJ,GAAoB,OAIvD,CAAEN,eAAcC,aAAYH,qBAAoBC,0B,mECqC1CY,GA9DU,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAAS/E,EAAiC,EAAjCA,UAAWoC,EAAsB,EAAtBA,MAAO4C,EAAe,EAAfA,SAC/CC,EAAoB,SAACtB,GACzB,IACMhE,EADSgF,SAASO,cAAc,UACfC,WAAW,MAGlC,OAFAxF,EAAQyF,KAAO,yBAERzF,EAAQ0F,YAAY1B,GAAMhB,OAGnC,EAAoC1F,mBAASmF,GAA7C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAAoCtI,mBAAS,GAAD,OAAIgI,EAAkB7C,GAAtB,OAA5C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACMC,EAAW5E,iBAAO,MAExB,EAAwBjB,IAAhBT,EAAR,oBAIMyE,EAAY,CAChB,iBAH0EzE,EAApEhB,YAIN,eAJ0EgB,EAAvDb,iBAKnB,iBAL0Ea,EAArCd,YAMrC,qBAN0Ec,EAAxBR,qBAmBpD,OAJAlB,qBAAU,WACRgI,EAAS3E,QAAQ4E,WAIjB,uBAAM3F,UAAW4F,KAAW5F,EAAWE,KAAOc,MAAO+B,MAAOc,EAAWgC,IAAKd,EAASC,SAAUA,EAA/F,UACE,uBACEhF,UAAWE,KAAO4F,MAClB1F,QAAS,SAAA6B,GAAC,OAAIA,EAAE8D,mBAChBC,SAfmB,SAAC/D,GACxB,IAAMgE,EAAWhE,EAAEiE,cAAc/L,MACjCoL,EAAcU,GACdR,EAAc,GAAD,OAAIR,EAAkBgB,GAAtB,QAaTzD,KAAK,OACL5I,KAAK,QACLiM,IAAKH,EACL3C,MAAO,CAACJ,MAAO6C,GACfrL,MAAOmL,IAET,wBAAQtF,UAAWE,KAAOiG,OAAQvM,KAAK,SAAS4I,KAAK,SAArD,SACE,cAAC,KAAD,CAAiBxC,UAAWE,KAAOkG,GAAI5F,KAAM6F,a,oBCQtCC,GAzDU,SAAC,GAInB,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,MAEA,EAAsB5G,IAAfT,EAAP,oBACA,EAAsCnC,mBAAS,GAA/C,mBAAOyJ,EAAP,KAAoBC,EAApB,KAGEnI,EAMEY,EANFZ,mBACAC,EAKEW,EALFX,kBAWIqE,EAAY,CAChB,eAAgBtE,EAChB,qBAREY,EAJFV,mBAaA,iBATEU,EAHFd,YAaA,0BAVEc,EAFFR,oBAaA,oBAXEQ,EADFT,kBAaA,gBAAiBF,GAGnB,OACE,sBAAKuB,UAAWE,KAAOc,KAAM+B,MAAOD,EAApC,UACE,sBAAK9C,UAAWE,KAAOgB,gBAAvB,UACE,wBAAQlB,UAAWE,KAAOC,OAAQC,QAhBlB,WACpBuG,EAAeC,KAAKC,MAehB,SACE,oBAAI7G,UAAWE,KAAOqG,YAAtB,SAAoCA,MAEtC,sBAAMvG,UAAWE,KAAOsG,SAAxB,SAAmCA,OAErC,cAAC,KAAD,CAAaE,YAAaA,EAAaI,WAAS,EAAhD,SACG,gBAAGC,EAAH,EAAGA,sBAAH,OACC,qBAAK/G,UAAWE,KAAO8G,YAAanB,IAAKkB,EAAzC,SACE,qBAAK/G,UAAWE,KAAOmC,UAAvB,SACE,mBAAGrC,UAAWE,KAAOuG,MAArB,SAA6BA,GAAS,oC,oBCiFrCQ,GA3GM,SAAC,GAAiE,IAAD,IAA9DC,eAA8D,SAA9C9E,EAA8C,EAA9CA,MAAO+E,EAAuC,EAAvCA,iBAAuC,IAArBC,iBAAqB,MAAT,GAAS,EACpF,EAAsCnK,mBAAS,GAA/C,mBAAOyJ,EAAP,KAAoBC,EAApB,KACA,EAAwC1J,mBAASmF,GAAjD,mBAAOiF,EAAP,KAAqBC,EAArB,KACA,EAAsBzH,IAAfT,EAAP,oBACMmI,EAAkBzG,iBAAO,MAC/B,EAAgFkD,KAAxEG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYH,EAAlC,EAAkCA,mBAAoBC,EAAtD,EAAsDA,sBAGpD9F,EASEgB,EATFhB,YACAC,EAQEe,EARFf,WACAC,EAOEc,EAPFd,YACAC,EAMEa,EANFb,iBACAC,EAKEY,EALFZ,mBACAC,EAIEW,EAJFX,kBACAG,EAGEQ,EAHFR,oBAKI4I,EAAsB,CAC1BpJ,YAAaI,EACbH,WAAYI,EACZH,YAAaA,EACbmJ,eANErI,EAFFV,mBASAgJ,oBAAqB9I,EACrB+I,cAREvI,EADFT,mBAeIiJ,EAAwB,SAAAtD,GAAO,OAHL,SAAAA,GAAO,OAAIiD,EAAgBxG,UAAYwG,EAAgBxG,UAAYuD,GAAWiD,EAAgBxG,QAAQwD,SAASD,IAGrGuD,CAAwBvD,KAFvC,SAAAA,GAAO,OAAIF,EAAWrD,UAAYqD,EAAWrD,UAAYuD,GAAWF,EAAWrD,QAAQwD,SAASD,IAE5CD,CAAmBC,KADrE,SAAAA,GAAO,OAAIH,EAAapD,UAAYoD,EAAapD,UAAYuD,GAAWH,EAAapD,QAAQwD,SAASD,IACnBwD,CAAqBxD,IAQ/HxB,EAAY,CAChB,iBAAkB1E,EAClB,iBAAkBE,EAClB,eAAgBC,EAChB,gBAAiBF,EACjB,yBAA0BG,EAC1B,0BAA2BI,GAY7B,OACE,sBAAKoB,UAAWE,KAAOc,KAAM+B,MAAOD,EAApC,UACE,qBAAK9C,UAAWE,KAAO6H,eAAvB,SACE,sBAAK/H,UAAWE,KAAO8H,QAASnC,IAAK0B,EAAiBnH,QA3BpC,SAAC6B,GACnB2F,EAAsB3F,EAAEyC,SAC1BiC,EAAeC,KAAKC,MAyBlB,UACGK,GAAW,qBAAKrB,IAAKzB,EAAV,SACV,cAAC,KAAD,CAAiBpE,UAAWE,KAAOkG,GAAI5F,KAAMyH,SAE9Cf,GAAWjD,EACV,cAAC,EAAD,CAAe7E,YAAaA,EAA5B,SACE,cAAC,GAAD,CACE2F,QAASZ,EACTnE,UAAWE,KAAOgI,KAClB9I,YAAaA,EACbgD,MAAOA,EACP4C,SAvBY,SAAC/C,GACzB,IA3DYkG,EA2DNC,EAAWnG,EAAEoG,YAAY3D,OAAO9H,SAAS,GAAG0L,cA3DtCH,EA6DEC,IAtDPD,EAAII,MAAM,uBAAuB,KAAOJ,GAsDtBb,EAAgBc,GAEzCjB,EAAiBlF,GACjBiC,GAAsB,QAoBd,oBAAIlE,UAAWE,KAAOkC,MAAtB,SAA8BiF,SAGpC,cAAC,KAAD,CAAaX,YAAaA,EAAaI,WAAS,EAAhD,SACG,gBAAGC,EAAH,EAAGA,sBAAH,OACC,qBAAK/G,UAAWE,KAAO8G,YAAanB,IAAKkB,EAAzC,SACGK,EAAUlE,KAAI,YAA2C,IAAxCsF,EAAuC,EAAvCA,GAAIjC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACrCgC,EAAO,UAAMrG,EAAMsG,cAAcC,QAAQ,IAAK,KAAvC,YAA+CH,GAE5D,OACE,cAAC,GAAD,CAEEjC,YAAaA,EACbC,SAAUA,EACVC,MAAOA,EACPrH,YAAaoI,GAJRiB,e,oBCzDRG,GA3CiB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAO1B,EAAuB,EAAvBA,iBACxC,OAAqB,IAAjB0B,EAAMC,OACD,mBAAG9I,UAAWE,KAAO6I,QAArB,yCAGL,mCACGF,EAAM3F,KAAI,WAA6Ca,GAAW,IAArDyE,EAAoD,EAApDA,GAAIpG,EAAgD,EAAhDA,MAAO4G,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,oBAEzBC,EAAoBnF,EAAQ9E,EAAa6J,OAAS/E,EAAQA,EAAQ9E,EAAa6J,OAC/EK,EAAU/G,EAAMsG,cAAcC,QAAQ,IAAK,KAEjD,OACE,cAAC,EAAD,CAA6BvJ,YAAaH,EAAaiK,GAAvD,SACE,qBAAKlJ,UAAWE,KAAOkJ,aAAvB,SACE,cAAC,GAAD,CACElC,SAAU8B,EACV5G,MAAOA,EACPgF,UAAW6B,EACX9B,iBAAkB,SAAAlF,GAAC,OAAIkF,EAAiBqB,EAAIvG,SAN9BkH,S,oBCP1BE,GAAU,UACV7M,GAAO,OACP8M,GAAQ,QA0HCC,GAxHU,WACvB,MAA0CtM,mBAAS,MAAnD,mBAAOV,EAAP,KAAsBiN,EAAtB,KACA,EAAwCvM,mBAASoM,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAoCzM,mBAAS,IAA7C,mBAAO0M,EAAP,KAAmBC,EAAnB,KACA,EAAwC3M,oBAAS,GAAjD,mBAAO4M,EAAP,KAAqBC,EAArB,KAEMjJ,EAAaC,kBAAO,GAE1B,EAA4DhB,IAApDpF,EAAR,EAAQA,MAAO8C,EAAf,EAAeA,oBAAqBH,EAApC,EAAoCA,oBAsGpC,OANAK,qBA9FmB,WACbhD,GvB4B0B,SAAAA,GAChC,IAAMiD,EAAG,UAAMnD,EAAN,mBAET,OACEoD,MAAMD,EAAK,CAAEE,QAASpD,EAAWC,KAC9BO,MAAK,SAAAH,GAEJ,OADAD,EAAoBC,GACbA,KuBlCTiP,CAAmBrP,GAChBO,MAAK,SAAAH,GAAI,OAAIA,EAAKE,UAClBC,MAAK,SAAAC,GACJ,IAAIA,EAIF,MAAM,IAAIvB,MAAM,mDAHhB6P,EAAiBtO,GACjBwO,EAAgBlN,OAKnBwB,OAAM,SAAA3C,GACLC,QAAQH,MAAM,kCAAmCE,EAAI5B,SAEpC,uBAAb4B,EAAIzB,KACN2B,GAAiB,WACfb,GAAS8C,IACTH,EAAoBnB,EAAMC,MAC1B0E,EAAWE,SAAU,MAGnB8I,GAAcC,GAAgB,GAClCJ,EAAgBJ,UAuEJ,IAEtB5L,qBAAU,WACR,OAAO,kBAAOmD,EAAWE,SAAU,KAClC,IAGD,eAAC,EAAD,CAAiBqB,MAAM,sBAAvB,UACGyH,GAAgB,qBAAK7J,UAAWE,KAAO8J,MAAvB,SAA8B,cAAC,GAAD,eAAkBL,MAChEpN,GAAiBkN,IAAiBjN,IAAQ,cAAC,GAAD,CAAyBqM,MAAOtM,EAAe4K,iBA1E3E,SAAC8C,EAAQhI,GAC1BA,EAAEC,iBAEF,IAAMkG,EAAWnG,EAAEoG,YAAY3D,OAAO9H,SAAS,GAAG0L,cvBUpB,SAAC5N,EAAOuP,EAAQC,GAChD,IAAMvM,EAAG,UAAMnD,EAAN,2BAAgCyP,GAEnC5J,EAAO8J,KAAKC,UAAU,CAC1B5B,GAAIyB,EACJI,cAAeH,IAGjB,OACEtM,MAAMD,EAAK,CACT2M,OAAQ,QACRzM,QAASjD,EAAgBF,GACzB2F,KAAMA,IAEPpF,MAAK,SAAAH,GAEJ,OADAD,EAAoBC,GACbA,MuBxBTyP,CAAmB7P,EAAOuP,EAAQ,CAAE7H,MAAOgG,IACxCnN,MAAK,SAAA8C,GACJ,OAAOA,EAAShD,QACd,KAAK,IACL,KAAK,IACH,OAAOgD,EAAS/C,OAClB,KAAK,IAQH,OAPA4O,EAAc,CACZpH,KAAM,QACN/I,QAAS,4EAGXqQ,GAAgB,GAET,KACT,QACE,MAAMnQ,MAAM,uDAAD,OAAwDsQ,QAGxEhP,MAAK,SAAAC,GACJ,GAAIA,IAASA,EAAKsP,OAAQ,CACxB,IAAMC,EAAmBlO,EAAc2G,KAAI,SAAAwH,GAAU,OAAIA,EAAKlC,KAAOyB,EAAiB/O,EAAqBwP,KAC3GlB,EAAiBiB,QACRvP,GAAQA,EAAKsP,QAAUtP,EAAKsP,OAAOpI,OAC5CwH,EAAc,CACZpH,KAAM,QACNrB,OAAO,GAAD,OAAKjG,EAAKsP,OAAOpI,MAAM0G,OAAvB,sDACNrP,QAASyB,EAAKsP,OAAOpI,MAAMc,KAAI,SAAAxD,GAAG,sBAAaA,QAEjDoK,GAAgB,KAEhBF,EAAc,CACZpH,KAAM,QACN/I,QAAS,yHAEXqQ,GAAgB,OAGnB9L,OAAM,SAAA7C,GAML,GALAG,QAAQH,MAAR,uCAA8C8O,EAA9C,MAA0D9O,EAAM1B,SAK7C,uBAAf0B,EAAMvB,KACR,OAAO2B,GAAiB,WACtBb,GAAS8C,IACTH,EAAoBnB,EAAME,OAC1ByE,EAAWE,SAAU,KAGvB6I,EAAc,CACZpH,KAAM,QACN/I,QAAS,qGAGNoQ,GAAcC,GAAgB,SActCL,IAAiBJ,IAAW,cAAC,GAAD,CAASrJ,UAAWE,KAAOqD,QAASf,KAAK,UAAUC,MAAOtE,EAAOC,YAAasE,OAAO,MAAMC,MAAM,SAC5H8G,IAAiBH,IAAUG,IAAiBjN,KAASD,IAAmB,mBAAGyD,UAAWE,KAAO/E,MAArB,kG,oBC7GjEwP,GAdE,WACf,MAAuB7N,YAAW,CAACvD,IAA5BwD,EAAP,oBAEA,OAAQhB,KAAmBgB,EAAQxD,GACjC,cAAC,IAAD,CAAU2E,GAAIhC,EAAMG,UAAUC,OAC9B,qBAAK0D,UAAWE,KAAOc,KAAvB,SACE,sBAAKhB,UAAWE,KAAOmC,UAAvB,UACE,oBAAIrC,UAAWE,KAAOiB,OAAtB,yCACA,cAAC,IAAD,CAAMnB,UAAWE,KAAO9D,MAAO8B,GAAIhC,EAAME,MAAzC,sC,wCCoDOwO,GArDG,WAChB,MAA2C9N,YAAW,CAACvD,IAAvD,mBAAOwD,EAAP,KAAgB8N,EAAhB,KAA2B7N,EAA3B,KAEA,EAAkDC,mBAAS,MAA3D,mBAAO6N,EAAP,KAA0BC,EAA1B,KA6BA,OAAOhO,EAAQxD,KAAuBwC,IACpC,cAAC,IAAD,CAAUmC,GAAIhC,EAAMG,UAAUC,OAC9B,sBAAK0D,UAAWE,KAAOc,KAAvB,UACG8J,EACD,mBAAG9K,UAAWE,KAAO8K,aAArB,SAAoCF,IACpC,KACA,qBAAK9K,UAAWE,KAAOmC,UAAvB,SACE,cAAC,KAAD,CACErC,UAAWE,KAAOC,OAClB8K,SAAU5R,EACV6R,WAAW,qBACXC,UAtCgB,SAACrQ,GACvB,IAAQsQ,EAAYtQ,EAAZsQ,QAEJrO,EAAQxD,KAAuB6R,GzBLd,SAAA1Q,GACvB,IAAMiD,EAAG,UAAMnD,EAAN,sBAET,OACEoD,MAAMD,EAAK,CAAGE,QAASpD,EAAWC,KAC/BO,MAAK,SAAAH,GAEJ,OADAD,EAAoBC,GACbA,KyBDTuQ,CAAUD,GACTnQ,MAAK,SAAA8C,GACoB,MAApBA,EAAShD,QACX8P,EAAUtR,EAAmB6R,MAGhCpN,OAAM,SAAA7C,GACLG,QAAQH,MAAM,kCAAmCA,EAAM1B,SAEvD8B,GAAiB,WAEf,OADAwB,EAAQxD,IAAsByD,EAAazD,GACpC,cAAC,IAAD,CAAU2E,GAAIhC,EAAMC,cAwB3BmP,UAlBgB,SAACxQ,GACvBQ,QAAQiQ,IAAI,kBAAmBzQ,GAC/BiC,EAAQxD,IAAsByD,EAAazD,GAC3CwR,EAAqB,uDAgBfS,YAAY,EACZC,YAAW,UAAKnS,GAAL,OAA6C4C,EAAMG,UAAUC,cCnD5EoP,GAAY,gCAEZC,GAAQ,CACZ,CACEC,OAAQ,OACRxJ,MAAM,GAAD,OAAKsJ,GAAL,SACLnF,YAAa,6DACbsF,UAAWlB,GACXmB,KAAM5P,EAAMC,KACZ2D,qBAAqB,GAEvB,CACE8L,OAAQ,QACRxJ,MAAM,GAAD,OAAKsJ,GAAL,UACLnF,YAAa,iEACbsF,UAAWjB,GACXkB,KAAM5P,EAAME,MACZ0D,qBAAqB,GAEvB,CACE8L,OAAQ,YACRxJ,MAAM,GAAD,OAAKsJ,GAAL,cACLnF,YAAa,6CACbsF,UAAWvI,GACXwI,KAAM5P,EAAMG,UAAUC,KACtBwD,qBAAqB,GAEvB,CACE8L,OAAQ,gBACRxJ,MAAM,GAAD,OAAKsJ,GAAL,0BACLnF,YAAa,+BACbsF,UAAWtC,GACXuC,KAAM5P,EAAMG,UAAUE,cACtBuD,qBAAqB,IAwBViM,GApBI,kBACjB,cAAC,IAAD,UACGJ,GAAMzI,KACL,YAA2E,IAAxE0I,EAAuE,EAAvEA,OAAQxJ,EAA+D,EAA/DA,MAAOmE,EAAwD,EAAxDA,YAAasF,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,KAAMhM,EAA0B,EAA1BA,oBAC9C,OACE,eAAC,IAAD,CAAOkM,OAAK,EAACF,KAAMA,EAAnB,UACE,eAAC,IAAD,WACE,sBAAMG,KAAK,OAEX,gCAAQ7J,IACR,sBAAMxI,KAAK,cAAcsS,QAAS3F,OAEnCzG,EAAsB,cAAC,EAAD,UAAmB,cAAC+L,EAAD,MAAoC,cAACA,EAAD,MAPlDD,SCtCzBO,GATH,WACV,OACE,cAAC,IAAD,CAAQC,SAAUpQ,GAAlB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCJRqQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF5H,SAAS6H,eAAe,U,kBCR1BrT,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,6BAA6B,gBAAkB,yCAAyC,OAAS,gCAAgC,WAAa,oCAAoC,QAAU,iCAAiC,YAAc,qCAAqC,QAAU,iCAAiC,WAAa,oCAAoC,OAAS,gCAAgC,eAAiB,wCAAwC,OAAS,gCAAgC,GAAK,+B","file":"static/js/main.6359ab9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"shoppingListItem_root__3NPoi\",\"headerContainer\":\"shoppingListItem_headerContainer__hu6Ur\",\"button\":\"shoppingListItem_button__2k4QA\",\"quantity\":\"shoppingListItem_quantity__1ebyP\",\"description\":\"shoppingListItem_description__mnU6z\",\"collapsible\":\"shoppingListItem_collapsible__xa2wr\",\"notes\":\"shoppingListItem_notes__8g2fK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"shoppingList_root__2O9FT\",\"trigger\":\"shoppingList_trigger__WV4fR\",\"form\":\"shoppingList_form__1GdfA\",\"title\":\"shoppingList_title__3Gulc\",\"fa\":\"shoppingList_fa__hRtKq\",\"collapsible\":\"shoppingList_collapsible__2Zuq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"dashboardLayout_root__2dfR_\",\"title\":\"dashboardLayout_title__1yGVn\",\"hr\":\"dashboardLayout_hr__29GgW\",\"container\":\"dashboardLayout_container__3AwFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"flashMessage_root__2sPxp\",\"content\":\"flashMessage_content__3iY0s\",\"header\":\"flashMessage_header__Vx_Jr\",\"messageList\":\"flashMessage_messageList__3V9SA\",\"msg\":\"flashMessage_msg__3Wquk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"shoppingListForm_root__24Wk-\",\"input\":\"shoppingListForm_input__27DAp\",\"submit\":\"shoppingListForm_submit__2yw-C\",\"fa\":\"shoppingListForm_fa__1iH4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"homePage_root__15tty\",\"container\":\"homePage_container__3kQJo\",\"header\":\"homePage_header__3EV45\",\"login\":\"homePage_login__3ala0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"loginPage_root__2Vf7z\",\"errorMessage\":\"loginPage_errorMessage__8uTVC\",\"container\":\"loginPage_container__2xdLK\",\"button\":\"loginPage_button__1pDsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"logoutDropdown_button__3hRUK\",\"body\":\"logoutDropdown_body__NiLPw\",\"googleLogout\":\"logoutDropdown_googleLogout__J9YSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flash\":\"shoppingListPage_flash__1mBKN\",\"loading\":\"shoppingListPage_loading__LoEmY\",\"error\":\"shoppingListPage_error__3Ea81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"navigationMosaic_root__2CDUx\",\"card\":\"navigationMosaic_card__3hEln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"dashboardPage_root__oVxx1\",\"loading\":\"dashboardPage_loading__2vZsl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noLists\":\"shoppingListPageContent_noLists__3xnMI\",\"shoppingList\":\"shoppingListPageContent_shoppingList__S3gTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"navigationCard_root__1-FD3\"};","export const googleClientId = {\n  development: '891031345873-ir73kc1ru0ncv564iesac94kjaap5nf4.apps.googleusercontent.com',\n  production: '891031345873-gf3loovttd7bfvrq4ilqdduvvibb0tub.apps.googleusercontent.com'\n}\n\nexport const backendBaseUri = {\n  development: 'http://localhost:3000',\n  production: 'https://sim-api.danascheider.com'\n}\n\nexport const frontendBaseUri = {\n  development: 'http://localhost:3001',\n  production: 'https://sim.danascheider.com'\n}\n\nexport const sessionCookieName = '_sim_google_session'\n","export const AuthorizationError = (message = '401 Unauthorized') => {\n  let instance = new Error(message)\n  instance.name = 'AuthorizationError'\n  instance.message = message\n  Object.setPrototypeOf(instance, Object.getPrototypeOf(this))\n  return instance\n}\n\nAuthorizationError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: Error,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n})\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(AuthorizationError, Error)\n} else {\n  AuthorizationError.__proto__ = Error\n}\n","import { backendBaseUri } from './config'\nimport { AuthorizationError } from './customErrors'\n\nconst baseUri = backendBaseUri[process.env.NODE_ENV]\nconst authHeader = token => ({ 'Authorization': `Bearer ${token}`})\nconst contentTypeHeader = { 'Content-Type': 'application/json' }\nconst combinedHeaders = token => ({ ...authHeader(token), ...contentTypeHeader })\n\nconst throwAuthErrorOn401 = resp => {\n  if (resp.status === 401) resp.json().then(data => { throw new AuthorizationError(data.error) })\n}\n\n/*\n *\n * Google OAuth Token Verification Endpoint\n * \n */\n\nexport const authorize = token => {\n  const uri = `${baseUri}/auth/verify_token`\n\n  return(\n    fetch(uri, {  headers: authHeader(token) })\n      .then(resp => {\n        throwAuthErrorOn401(resp)\n        return resp\n      })\n  )\n}\n\n/*\n *\n * User Profile Endpoint\n * \n */\n\nexport const fetchUserProfile = token => {\n  const uri = `${baseUri}/users/current`\n\n  return(\n    fetch(uri, { headers: authHeader(token) })\n      .then(resp => {\n        throwAuthErrorOn401(resp)\n        return resp\n      })\n  )\n}\n\n/*\n *\n * Shopping List Endpoints (Scoped to Authenticated User)\n *\n */\n\n// GET index\nexport const fetchShoppingLists = token => {\n  const uri = `${baseUri}/shopping_lists`\n\n  return(\n    fetch(uri, { headers: authHeader(token) })\n      .then(resp => {\n        throwAuthErrorOn401(resp)\n        return resp\n      })\n  )\n}\n\n// PATCH update\nexport const updateShoppingList = (token, listId, attrs) => {\n  const uri = `${baseUri}/shopping_lists/${listId}`\n\n  const body = JSON.stringify({\n    id: listId,\n    shopping_list: attrs\n  })\n\n  return(\n    fetch(uri, {\n      method: 'PATCH',\n      headers: combinedHeaders(token),\n      body: body\n    })\n    .then(resp => {\n      throwAuthErrorOn401(resp)\n      return resp\n    })\n  )\n}\n","const defaultErrorCallback = err => {\n  console.error('Error signing out: ', err.message)\n}\n\nconst logOutWithGoogle = (success = () => {}, error = defaultErrorCallback) => {\n  if (window.gapi && window.gapi.auth2) {\n    const GoogleAuth = window.gapi.auth2.getAuthInstance()\n\n    if (GoogleAuth !== null) {\n      GoogleAuth\n        .then(() => GoogleAuth.signOut())\n        .then(success, error)\n    } else {\n      success() // Google thinks they aren't logged in anyway\n    }\n  }\n\n  success()\n}\n\nexport default logOutWithGoogle\n","const isStorybook = () => (!!process.env.STORYBOOK)\n\nexport default isStorybook\n","const paths = {\n  home: '/',\n  login: '/login',\n  dashboard: {\n    main: '/dashboard',\n    shoppingLists: '/dashboard/shoppingLists'\n  }\n}\n\nexport default paths\n","/*\n *\n * For more information about contexts and how they are used in SIM,\n * visit the docs on SIM contexts (/docs/contexts.md)\n * \n */\n\nimport { createContext, useEffect, useState } from 'react'\nimport { useCookies } from 'react-cookie'\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { sessionCookieName } from '../utils/config'\nimport { fetchUserProfile } from '../utils/simApi'\nimport logOutWithGoogle from '../utils/logOutWithGoogle'\nimport isStorybook from '../utils/isStorybook'\nimport paths from '../routing/paths'\n\nconst LOADING = 'loading'\nconst DONE = 'done'\n\nconst DashboardContext = createContext()\n\n// overrideValue allows us to set the context value in Storybook.\n// I hate having the testing apparatus baked into the app code but\n// none of the solutions I found worked and I don't understand\n// Storybook decorators and whatnot enough to figure out how to\n// set the value for the context in the story,\nconst DashboardProvider = ({ children, overrideValue = {} }) => {\n  const [cookies, , removeCookie] = useCookies([sessionCookieName])\n  const [profileData, setProfileData] = useState(null)\n  const [shouldRedirectTo, setShouldRedirectTo] = useState(null)\n  const [profileLoadState, setProfileLoadState] = useState(LOADING)\n\n  const removeSessionCookie = () => removeCookie(sessionCookieName)\n\n  const value = {\n    token: cookies[sessionCookieName],\n    profileData,\n    removeSessionCookie,\n    setProfileData,\n    profileLoadState,\n    setShouldRedirectTo,\n    ...overrideValue // enables you to only change certain values\n  }\n\n  const shouldFetchProfileData = !overrideValue.profileData && cookies[sessionCookieName]\n\n  const fetchProfileData = () => {\n    if (shouldFetchProfileData) {\n      fetchUserProfile(cookies[sessionCookieName])\n        .then(response => response.json())\n        .then(data => {\n          setProfileData(data)\n          if (!overrideValue.profileLoadState) setProfileLoadState(DONE)\n        })\n        .catch(error => {\n          console.error('Error returned while fetching profile data: ', error.message)\n\n          logOutWithGoogle(() => {\n            cookies[sessionCookieName] && removeSessionCookie()\n            setShouldRedirectTo(paths.login)\n          })\n        })\n    } else if (!cookies[sessionCookieName] && !isStorybook()) {\n      setShouldRedirectTo(paths.login)\n    } else if (isStorybook() && !overrideValue.profileLoadState) setProfileLoadState(DONE) \n  }\n\n  useEffect(fetchProfileData, [])\n\n  return(\n    <DashboardContext.Provider value={value}>\n      {shouldRedirectTo ? <Redirect to={shouldRedirectTo} /> : children}\n    </DashboardContext.Provider>\n  )\n}\n\nDashboardProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  overrideValue: PropTypes.shape({\n    token: PropTypes.string,\n    profileData: PropTypes.shape({\n      id: PropTypes.number,\n      uid: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n      image_url: PropTypes.string\n    }),\n    setSessionCookie: PropTypes.func,\n    removeSessionCookie: PropTypes.func,\n    setProfileData: PropTypes.func\n  })\n}\n\nexport { DashboardContext, DashboardProvider }\n","export const YELLOW = {\n  schemeColor: '#FFBF00',\n  hoverColor: '#E5AB00',\n  borderColor: '#CC9800',\n  textColorPrimary: '#000000',\n  schemeColorLighter: '#FFCB32',\n  hoverColorLighter: '#FFC519',\n  textColorSecondary: '#000000',\n  textColorTertiary: '#000000',\n  schemeColorLightest: '#FFF2CC'\n}\n\nexport const PINK = {\n  schemeColor: '#E83F6F',\n  hoverColor: '#D03863',\n  borderColor: '#B93258',\n  textColorPrimary: '#FFFFFF',\n  schemeColorLighter: '#EC658B',\n  hoverColorLighter: '#EA527D',\n  textColorSecondary: '#FFFFFF',\n  textColorTertiary: '#000000',\n  schemeColorLightest: '#FAD8E2'\n}\n\nexport const BLUE = {\n  schemeColor: '#2274A5',\n  hoverColor: '#1E6894',\n  borderColor: '#1B5C84',\n  textColorPrimary: '#FFFFFF',\n  schemeColorLighter: '#4E8FB7',\n  hoverColorLighter: '#3881AE',\n  textColorSecondary: '#FFFFFF',\n  textColorTertiary: '#000000',\n  schemeColorLightest: '#D2E3ED'\n}\n\nexport const GREEN = {\n  schemeColor: '#00A323',\n  hoverColor: '#00921F',\n  borderColor: '#00821C',\n  textColorPrimary: '#FFFFFF',\n  schemeColorLighter: '#32B54E',\n  hoverColorLighter: '#19AC38',\n  textColorSecondary: '#FFFFFF',\n  textColorTertiary: '#000000',\n  schemeColorLightest: '#CCECD3'\n}\n\nexport const AQUA = {\n  schemeColor: '#20E2E9',\n  hoverColor: '#1CCBD1',\n  borderColor: '#19B4BA',\n  textColorPrimary: '#000000',\n  schemeColorLighter: '#62EAEF',\n  hoverColorLighter: '#4CE7ED',\n  textColorSecondary: '#000000',\n  textColorTertiary: '#000000',\n  schemeColorLightest: '#D2F9FA'\n}\n\nconst colorSchemes = [\n  YELLOW,\n  PINK,\n  BLUE,\n  GREEN,\n  AQUA\n]\n\nexport default colorSchemes\n","/*\n *\n * For more information about contexts and how they are used in SIM,\n * visit the docs on SIM contexts (/docs/contexts.md)\n *\n */\n\nimport { createContext, useState, useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst ColorContext = createContext()\n\nconst ColorProvider = ({ colorScheme, children }) => {\n  const [scheme, setScheme] = useState(colorScheme)\n  const value = useMemo(() => [scheme, setScheme], [scheme])\n\n  return(\n    <ColorContext.Provider value={value} colorScheme={scheme}>\n      {children}\n    </ColorContext.Provider>\n  )\n}\n\nColorProvider.propTypes = {\n  colorScheme: PropTypes.shape({\n    schemeColor: PropTypes.string.isRequired,\n    hoverColor: PropTypes.string.isRequired,\n    textColorPrimary: PropTypes.string.isRequired,\n    borderColor: PropTypes.string,\n    schemeColorLighter: PropTypes.string,\n    hoverColorLighter: PropTypes.string,\n    schemeColorLightest: PropTypes.string,\n    textColorSecondary: PropTypes.string,\n    textColorTertiary: PropTypes.string\n  }).isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport { ColorProvider, ColorContext }\n","/*\n *\n * For more information about contexts and how they are used in SIM,\n * visit the docs on SIM contexts (/docs/contexts.md)\n *\n */\n\nimport { useContext } from 'react'\nimport { ColorContext } from '../contexts/colorContext'\nimport { DashboardContext } from '../contexts/dashboardContext'\n\nconst useCustomContext = (cxt, msg) => {\n  const context = useContext(cxt)\n\n  if (!context) {\n    throw new Error(msg)\n  }\n\n  return context\n}\n\nexport const useColorScheme = () => (\n  useCustomContext(ColorContext, 'useColorScheme must be used within a ColorProvider')\n)\n\nexport const useDashboardContext = () => (\n  useCustomContext(DashboardContext, 'useDashboardContext must be used within a DashboardProvider')\n)\n","export default __webpack_public_path__ + \"static/media/googleIcon.9432a66b.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport icon from './googleIcon.svg'\nimport styles from './logoutDropdown.module.css'\n\nconst LogoutDropdown = ({className, logOutUser}) => (\n  <div className={className}>\n    <button className={styles.button} onClick={logOutUser}>\n      <div className={styles.body}>\n        <div className={styles.googleLogout}>\n          <img src={icon} alt='Google logo' />\n          Log Out With Google\n        </div>\n      </div>\n    </button>\n  </div>\n)\n\nLogoutDropdown.propTypes = {\n  className: PropTypes.string.isRequired,\n  logOutUser: PropTypes.func.isRequired\n}\n\nexport default LogoutDropdown\n","export default __webpack_public_path__ + \"static/media/anonymousAvatar.36d1acc1.jpg\";","import React, { useState, useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport logOutWithGoogle from '../../utils/logOutWithGoogle'\nimport paths from '../../routing/paths'\nimport { useDashboardContext } from '../../hooks/contexts'\nimport LogoutDropdown from '../logoutDropdown/logoutDropdown'\nimport anonymousAvatar from './anonymousAvatar.jpg'\nimport styles from './dashboardHeader.module.css'\n\nconst DashboardHeader = () => {\n  const {\n    token,\n    profileData,\n    removeSessionCookie,\n    setShouldRedirectTo\n  } = useDashboardContext()\n\n  const [dropdownVisible, setDropdownVisible] = useState(false)\n  const mountedRef = useRef(true)\n\n  const logOutUser = (e) => {\n    e.preventDefault()\n\n    setDropdownVisible(false);\n\n    logOutWithGoogle(() => {\n      token && removeSessionCookie()\n      setShouldRedirectTo(paths.home)\n      mountedRef.current = false\n    })\n  }\n\n  useEffect(() => {\n    return () => (mountedRef.current = false)\n  }, [])\n\n  return(\n    <div className={styles.root}>\n      <div className={styles.bar}>\n        <span className={styles.headerContainer}>\n          <h1 className={styles.header}>\n            <Link className={styles.headerLink} to={paths.dashboard.main}>Skyrim Inventory<br className={styles.bp} /> Management</Link>\n          </h1>\n        </span>\n        {!!profileData ?\n        <button className={styles.profile} onClick={() => setDropdownVisible(!dropdownVisible)}>\n          <div className={styles.profileText}>\n            <p className={styles.textTop}>{profileData.name}</p>\n            <p className={styles.textBottom}>{profileData.email}</p>\n          </div>\n          <img className={styles.avatar} src={profileData.image_url || anonymousAvatar} alt='User avatar' referrerPolicy='no-referrer' />\n        </button> :\n        null\n        }\n        <LogoutDropdown\n          className={dropdownVisible ? styles.logoutDropdown : styles.hidden}\n          logOutUser={logOutUser}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DashboardHeader from '../components/dashboardHeader/dashboardHeader'\nimport styles from './dashboardLayout.module.css'\n\nconst DashboardLayout = ({ title, children }) => {\n  return(\n    <div className={styles.root}>\n      <div className={styles.container}>\n        {title ?\n        <>\n          <h2 className={styles.title}>{title}</h2>\n          <hr className={styles.hr} />\n        </> :\n        null}\n        {children}\n      </div>\n      <DashboardHeader />\n    </div>\n  )\n}\n\nDashboardLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired\n}\n\nexport default DashboardLayout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactLoading from 'react-loading'\n\nconst possibleTypes = [\n  'blank',\n  'balls',\n  'bars',\n  'bubbles',\n  'cubes',\n  'cylon',\n  'spin',\n  'spinningBubbles',\n  'spokes'\n]\n\nconst Loading = ({ className, type = 'spin', color, height, width }) => (\n  <ReactLoading className={className} type={type} color={color} height={height} width={width} />\n)\n\nLoading.propTypes = {\n  className: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(possibleTypes),\n  color: PropTypes.string.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n}\n\nexport default Loading\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { useColorScheme } from '../../hooks/contexts'\nimport styles from './navigationCard.module.css'\n\nconst NavigationCard = ({ href, children }) => {\n  const [{ schemeColor, hoverColor, textColorPrimary}] = useColorScheme()\n\n  const styleVars = {\n    '--background-color': schemeColor,\n    '--hover-color': hoverColor,\n    '--text-color': textColorPrimary\n  }\n\n  return(\n    <Link className={styles.root} to={href} style={styleVars}>\n      {children}\n    </Link>\n  )\n}\n\nNavigationCard.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport default NavigationCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ColorProvider } from '../../contexts/colorContext'\nimport NavigationCard from '../navigationCard/navigationCard'\nimport styles from './navigationMosaic.module.css'\n\nconst NavigationMosaic = ({ cardArray }) => (\n  <div className={styles.root}>\n    {cardArray.map(({ colorScheme, href, children, key }) => (\n      <div key={key} className={styles.card}>\n        <ColorProvider colorScheme={colorScheme}>\n          <NavigationCard \n            href={href}\n            children={children}\n          />\n        </ColorProvider>\n      </div>\n    ))}\n  </div>\n)\n\nNavigationMosaic.propTypes = {\n  cardArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      href: PropTypes.string.isRequired,\n      children: PropTypes.node.isRequired,\n      key: PropTypes.string.isRequired,\n      colorScheme: PropTypes.shape({\n        schemeColor: PropTypes.string.isRequired,\n        hoverColor: PropTypes.string.isRequired,\n        textColorPrimary: PropTypes.string.isRequired,\n        borderColor: PropTypes.string,\n        schemeColorLighter: PropTypes.string,\n        hoverColorLighter: PropTypes.string,\n        schemeColorLightest: PropTypes.string,\n        textColorSecondary: PropTypes.string,\n        textColorTertiary: PropTypes.string\n      }).isRequired\n    })\n  ).isRequired\n}\n\nexport default NavigationMosaic\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {\n  YELLOW,\n  PINK,\n  BLUE,\n  GREEN,\n  AQUA\n} from '../../utils/colorSchemes'\nimport paths from '../../routing/paths'\nimport { useDashboardContext } from '../../hooks/contexts'\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport Loading from '../../components/loading/loading'\nimport NavigationMosaic from '../../components/navigationMosaic/navigationMosaic'\nimport styles from './dashboardPage.module.css'\n\nconst cards = [\n  {\n    colorScheme: YELLOW,\n    href: paths.dashboard.shoppingLists,\n    children: 'Your Shopping Lists',\n    key: 'shopping-lists'\n  },\n  {\n    colorScheme: PINK,\n    href: '#',\n    children: 'Nav Link 2',\n    key: 'nav-link-2'\n  },\n  {\n    colorScheme: BLUE,\n    href: '#',\n    children: 'Nav Link 3',\n    key: 'nav-link-3'\n  },\n  {\n    colorScheme: GREEN,\n    href: '#',\n    children: 'Nav Link 4',\n    key: 'nav-link-4'\n  },\n  {\n    colorScheme: AQUA,\n    href: '#',\n    children: 'Nav Link 5',\n    key: 'nav-link-5'\n  }\n]\n\nconst DashboardPage = () => {\n  const { token, profileLoadState } = useDashboardContext()\n  \n  return(token ?\n    <DashboardLayout>\n      {profileLoadState === 'done' ? <div className={styles.root}>\n        <NavigationMosaic cardArray={cards} />\n      </div> :\n      <Loading className={styles.loading} type='bubbles' color={YELLOW.schemeColor} height='15%' width='15%' />}\n    </DashboardLayout> :\n    <Redirect to={paths.login} />\n  )\n}\n\nexport default DashboardPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './flashMessage.module.css'\n\nconst INFO = 'info'\nconst ERROR = 'error'\nconst WARNING = 'warning'\n\nconst colors = {\n  [INFO]: {\n    body: '#cce5ff',\n    border: '#b3d8ff',\n    text: '#6289b2',\n  },\n  [ERROR]: {\n    body: '#ffcccc',\n    border: '#ff9999',\n    text: '#cc0000'\n  },\n  [WARNING]: {\n    body: '#fefde4',\n    border: '#fdf797',\n    text: '#b0a723'\n  }\n}\n\nconst FlashMessage = ({ type = INFO, header, message }) => {\n  const colorVars = {\n    '--body-color': colors[type].body,\n    '--border-color': colors[type].border,\n    '--text-color': colors[type].text\n  }\n\n  return(\n    <div className={styles.root} style={colorVars}>\n      {header && <p className={styles.header}>{header}</p>}\n      {typeof message === 'string' ? message :\n      <ul className={styles.messageList}>\n        {message.map((msg, index) => <li key={`message-${index}`} className={styles.msg}>{msg}</li>)}\n      </ul>}\n    </div>\n  )\n}\n\nFlashMessage.propTypes = {\n  type: PropTypes.oneOf([INFO, ERROR, WARNING]),\n  header: PropTypes.string,\n  message: PropTypes.oneOfType([\n    PropTypes.string, PropTypes.arrayOf(PropTypes.string)\n  ]).isRequired\n}\n\nexport default FlashMessage\n","import { useState, useRef, useEffect } from 'react'\n\nconst useComponentVisible = () => {\n  const [isComponentVisible, setIsComponentVisible] = useState(false)\n  const componentRef = useRef(null)\n  const triggerRef = useRef(null)\n\n  const componentRefContains = element => componentRef.current && componentRef.current.contains(element)\n  const triggerRefContains = element => triggerRef.current && triggerRef.current.contains(element)\n\n  const handleHideDiv = e => {\n    if (e.key === 'Escape') {\n      setIsComponentVisible(false)\n    }\n  }\n\n  const handleClickOutside = e => {\n    if (!componentRefContains(e.target) && !triggerRefContains(e.target)) {\n      setIsComponentVisible(false)\n    } else if (triggerRefContains(e.target)) {\n      setIsComponentVisible(!isComponentVisible)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleHideDiv, true)\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('keydown', handleHideDiv, true)\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  })\n\n  return { componentRef, triggerRef, isComponentVisible, setIsComponentVisible }\n}\n\nexport default useComponentVisible\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { useColorScheme } from '../../hooks/contexts'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckSquare } from '@fortawesome/free-regular-svg-icons'\nimport styles from './shoppingListForm.module.css'\n\nconst ShoppingListForm = ({ formRef, className, title, onSubmit }) => {\n  const getInputTextWidth = (text) => {\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n    context.font = '21px Quattrocento Sans'\n\n    return context.measureText(text).width\n  }\n\n  const [inputValue, setInputValue] = useState(title)\n  const [inputWidth, setInputWidth] = useState(`${getInputTextWidth(title)}px`)\n  const inputRef = useRef(null)\n\n  const [ colorScheme ] = useColorScheme()\n\n  const { schemeColor, textColorPrimary, borderColor, schemeColorLightest } = colorScheme\n\n  const colorVars = {\n    '--scheme-color': schemeColor,\n    '--text-color': textColorPrimary,\n    '--border-color': borderColor,\n    '--icon-hover-color': schemeColorLightest\n  }\n\n  const updateInputWidth = (e) => {\n    const newValue = e.currentTarget.value\n    setInputValue(newValue)\n    setInputWidth(`${getInputTextWidth(newValue)}px`)\n  }\n\n  useEffect(() => {\n    inputRef.current.focus()\n  })\n\n  return(\n    <form className={classnames(className, styles.root)} style={colorVars} ref={formRef} onSubmit={onSubmit}>\n      <input\n        className={styles.input}\n        onClick={e => e.stopPropagation()}\n        onChange={updateInputWidth}\n        type='text'\n        name='title'\n        ref={inputRef}\n        style={{width: inputWidth}}\n        value={inputValue}\n      />\n      <button className={styles.submit} name='submit' type='submit'>\n        <FontAwesomeIcon className={styles.fa} icon={faCheckSquare} />\n      </button>\n    </form>\n  )\n}\n\nShoppingListForm.propTypes = {\n  formRef: PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  }),\n  className: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired\n}\n\nexport default ShoppingListForm\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useColorScheme } from '../../hooks/contexts'\nimport SlideToggle from 'react-slide-toggle'\nimport styles from './shoppingListItem.module.css'\n\nconst ShoppingListItem = ({\n  description,\n  quantity,\n  notes\n}) => {\n  const [colorScheme] = useColorScheme()\n  const [toggleEvent, setToggleEvent] = useState(0)\n\n  const {\n    schemeColorLighter,\n    hoverColorLighter,\n    textColorSecondary,\n    borderColor,\n    schemeColorLightest,\n    textColorTertiary\n  } = colorScheme\n  \n  const toggleDetails = () => {\n    setToggleEvent(Date.now)\n  }\n\n  const styleVars = {\n    '--main-color': schemeColorLighter,\n    '--title-text-color': textColorSecondary,\n    '--border-color': borderColor,\n    '--body-background-color': schemeColorLightest,\n    '--body-text-color': textColorTertiary,\n    '--hover-color': hoverColorLighter\n  }\n\n  return(\n    <div className={styles.root} style={styleVars}>\n      <div className={styles.headerContainer}>\n        <button className={styles.button} onClick={toggleDetails}>\n          <h4 className={styles.description}>{description}</h4>\n        </button>\n        <span className={styles.quantity}>{quantity}</span>\n      </div>\n      <SlideToggle toggleEvent={toggleEvent} collapsed>\n        {({ setCollapsibleElement }) => (\n          <div className={styles.collapsible} ref={setCollapsibleElement}>\n            <div className={styles.container}>\n              <p className={styles.notes}>{notes || 'No details available'}</p>\n            </div>\n          </div>\n        )}\n      </SlideToggle>\n    </div>\n  )\n}\n\nShoppingListItem.propTypes = {\n  description: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n  notes: PropTypes.string\n}\n\nexport default ShoppingListItem\n","import React, { useState, useRef } from 'react'\nimport useComponentVisible from '../../hooks/useComponentVisible'\nimport PropTypes from 'prop-types'\nimport { useColorScheme } from '../../hooks/contexts'\nimport { ColorProvider } from '../../contexts/colorContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-regular-svg-icons'\nimport SlideToggle from 'react-slide-toggle'\nimport ShoppingListForm from '../shoppingListForm/shoppingListForm'\nimport ShoppingListItem from '../shoppingListItem/shoppingListItem'\nimport styles from './shoppingList.module.css'\n\nconst isValid = str => (\n  // The title is valid if the entire string matches the regex. It can\n  // contain alphanumeric characters, spaces, and leading or trailing\n  // whitespace (which will be stripped before it is saved in the DB).\n  // Any other characters (including non-space whitespace characters\n  // that are not leading or trailing) will cause a validation error\n  // on the backend.\n  !!str && str.match(/^\\s*[a-z0-9 ]*\\s*$/i)[0] === str\n)\n\nconst ShoppingList = ({ canEdit = true, title, onSubmitEditForm, listItems = [] }) => {\n  const [toggleEvent, setToggleEvent] = useState(0)\n  const [currentTitle, setCurrentTitle] = useState(title)\n  const [colorScheme] = useColorScheme()\n  const slideTriggerRef = useRef(null)\n  const { componentRef, triggerRef, isComponentVisible, setIsComponentVisible } = useComponentVisible()\n\n  const {\n    schemeColor,\n    hoverColor,\n    borderColor,\n    textColorPrimary,\n    schemeColorLighter,\n    hoverColorLighter,\n    schemeColorLightest,\n    textColorSecondary,\n    textColorTertiary,\n  } = colorScheme\n\n  const listItemColorScheme = {\n    schemeColor: schemeColorLighter,\n    hoverColor: hoverColorLighter,\n    borderColor: borderColor,\n    titleTextColor: textColorSecondary,\n    bodyBackgroundColor: schemeColorLightest,\n    bodyTextColor: textColorTertiary\n  }\n\n  const slideTriggerRefContains = element => slideTriggerRef.current && (slideTriggerRef.current === element || slideTriggerRef.current.contains(element))\n  const triggerRefContains = element => triggerRef.current && (triggerRef.current === element || triggerRef.current.contains(element))\n  const componentRefContains = element => componentRef.current && (componentRef.current === element || componentRef.current.contains(element))\n  const shouldToggleListItems = element => (slideTriggerRefContains(element) && !triggerRefContains(element)) && !componentRefContains(element)\n\n  const toggleListItems = (e) => {\n    if (shouldToggleListItems(e.target)) {\n      setToggleEvent(Date.now)\n    }\n  }\n\n  const styleVars = {\n    '--scheme-color': schemeColor,\n    '--border-color': borderColor,\n    '--text-color': textColorPrimary,\n    '--hover-color': hoverColor,\n    '--scheme-color-lighter': schemeColorLighter,\n    '--scheme-color-lightest': schemeColorLightest\n  }\n\n  const submitAndHideForm = (e) => {\n    const newTitle = e.nativeEvent.target.children[0].defaultValue\n\n    if (!!isValid(newTitle)) setCurrentTitle(newTitle)\n\n    onSubmitEditForm(e)\n    setIsComponentVisible(false)\n  }\n\n  return(\n    <div className={styles.root} style={styleVars}>\n      <div className={styles.titleContainer}>\n        <div className={styles.trigger} ref={slideTriggerRef} onClick={toggleListItems}>\n          {canEdit && <div ref={triggerRef}>\n            <FontAwesomeIcon className={styles.fa} icon={faEdit} />\n          </div>}\n          {canEdit && isComponentVisible ?\n            <ColorProvider colorScheme={colorScheme}>\n              <ShoppingListForm\n                formRef={componentRef}\n                className={styles.form}\n                colorScheme={colorScheme}\n                title={title}\n                onSubmit={submitAndHideForm}\n              />\n            </ColorProvider> :\n            <h3 className={styles.title}>{currentTitle}</h3>}\n        </div>\n      </div>\n      <SlideToggle toggleEvent={toggleEvent} collapsed>\n        {({ setCollapsibleElement }) => (\n          <div className={styles.collapsible} ref={setCollapsibleElement}>\n            {listItems.map(({ id, description, quantity, notes }) => {\n              const itemKey = `${title.toLowerCase().replace(' ', '-')}-${id}`\n\n              return(\n                <ShoppingListItem\n                  key={itemKey}\n                  description={description}\n                  quantity={quantity}\n                  notes={notes}\n                  colorScheme={listItemColorScheme}\n                />\n              )\n            })}\n          </div>\n        )}\n      </SlideToggle>\n    </div>\n  )\n}\n\nShoppingList.propTypes = {\n  title: PropTypes.string.isRequired,\n  canEdit: PropTypes.bool,\n  onSubmitEditForm: PropTypes.func.isRequired,\n  listItems: PropTypes.arrayOf(PropTypes.shape).isRequired\n}\n\nexport default ShoppingList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport colorSchemes from '../../utils/colorSchemes'\nimport { ColorProvider } from '../../contexts/colorContext'\nimport ShoppingList from '../shoppingList/shoppingList'\nimport styles from './shoppingListPageContent.module.css'\n\nconst ShoppingListPageContent = ({ lists, onSubmitEditForm }) => {\n  if (lists.length === 0) {\n    return <p className={styles.noLists}>You have no shopping lists.</p>\n  } else {\n    return (\n      <>\n        {lists.map(({ id, title, master, shopping_list_items }, index) => {\n          // If there are more lists than colour schemes, cycle through the colour schemes\n          const colorSchemesIndex = index < colorSchemes.length ? index : index % colorSchemes.length\n          const listKey = title.toLowerCase().replace(' ', '-')\n\n          return (\n            <ColorProvider key={listKey} colorScheme={colorSchemes[colorSchemesIndex]}>\n              <div className={styles.shoppingList}>\n                <ShoppingList\n                  canEdit={!master}\n                  title={title}\n                  listItems={shopping_list_items}\n                  onSubmitEditForm={e => onSubmitEditForm(id, e)}\n                />\n              </div>\n            </ColorProvider>\n          )\n        })}\n      </>\n    )\n  }\n}\n\nShoppingListPageContent.propTypes = {\n  lists: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    master: PropTypes.bool.isRequired,\n    shopping_list_items: PropTypes.arrayOf(PropTypes.shape({\n      description: PropTypes.string.isRequired,\n      quantity: PropTypes.number.isRequired,\n      notes: PropTypes.string\n    })).isRequired\n  })).isRequired,\n  onSubmitEditForm: PropTypes.func.isRequired\n}\n\nexport default ShoppingListPageContent\n","import React, { useState, useEffect, useRef }from 'react'\nimport { fetchShoppingLists, updateShoppingList } from '../../utils/simApi'\nimport { YELLOW } from '../../utils/colorSchemes'\nimport logOutWithGoogle from '../../utils/logOutWithGoogle'\nimport paths from '../../routing/paths'\nimport { useDashboardContext } from '../../hooks/contexts'\nimport DashboardLayout from '../../layouts/dashboardLayout'\nimport FlashMessage from '../../components/flashMessage/flashMessage'\nimport ShoppingListPageContent from '../../components/shoppingListPageContent/shoppingListPageContent'\nimport Loading from '../../components/loading/loading'\nimport styles from './shoppingListPage.module.css'\n\nconst LOADING = 'loading'\nconst DONE = 'done'\nconst ERROR = 'error'\n\nconst ShoppingListPage = () => {\n  const [shoppingLists, setShoppingLists] = useState(null)\n  const [loadingState, setLoadingState] = useState(LOADING)\n  const [flashProps, setFlashProps] = useState({})\n  const [flashVisible, setFlashVisible] = useState(false)\n\n  const mountedRef = useRef(true)\n\n  const { token, removeSessionCookie, setShouldRedirectTo } = useDashboardContext()\n\n  const fetchLists = () => {\n    if (token) {\n      fetchShoppingLists(token)\n        .then(resp => resp.json())\n        .then(data => {\n          if (data) {\n            setShoppingLists(data)\n            setLoadingState(DONE)\n          } else {\n            throw new Error('No shopping list data returned from the SIM API')\n          }\n        })\n        .catch(err => {\n          console.error('Error fetching shopping lists: ', err.message)\n\n          if (err.name === 'AuthorizationError') {\n            logOutWithGoogle(() => {\n              token && removeSessionCookie()\n              setShouldRedirectTo(paths.home)\n              mountedRef.current = false\n            })\n          } else {\n            if (flashVisible) setFlashVisible(false)\n            setLoadingState(ERROR)\n          }\n        })\n    }\n  }\n\n  const updateList = (listId, e) => {\n    e.preventDefault()\n\n    const newTitle = e.nativeEvent.target.children[0].defaultValue\n\n    updateShoppingList(token, listId, { title: newTitle })\n      .then(response => {\n        switch(response.status) {\n          case 200:\n          case 422:\n            return response.json()\n          case 404:\n            setFlashProps({\n              type: 'error',\n              message: 'Shopping list could not be updated. Try refreshing to fix this problem.'\n            })\n\n            setFlashVisible(true)\n\n            return null\n          default:\n            throw Error(`Something unexpected went wrong while updating list ${listId}`)\n        }\n      })\n      .then(data => {\n        if (data && !data.errors) {\n          const newShoppingLists = shoppingLists.map(list => { if (list.id === listId) { return data } else { return list } })\n          setShoppingLists(newShoppingLists)\n        } else if (data && data.errors && data.errors.title) {\n          setFlashProps({\n            type: 'error',\n            header: `${data.errors.title.length} error(s) prevented your changes from being saved:`,\n            message: data.errors.title.map(msg => `Title ${msg}`)\n          })\n          setFlashVisible(true)\n        } else {\n          setFlashProps({\n            type: 'error',\n            message: 'We couldn\\'t update your list and we\\'re not sure what went wrong. We\\'re sorry! Please refresh the page and try again.'\n          })\n          setFlashVisible(true)\n        }\n      })\n      .catch(error => {\n        console.error(`Error updating shopping list ${listId}: `, error.message)\n\n        // The simApi module functions all throw a custom error class\n        // called AuthorizationError (defined in /src/utils/customErrors.js)\n        // in the event the API response status is 401\n        if (error.name === 'AuthorizationError') {\n          return logOutWithGoogle(() => {\n            token && removeSessionCookie()\n            setShouldRedirectTo(paths.login)\n            mountedRef.current = false\n          })\n        } else\n          setFlashProps({\n            type: 'error',\n            message: 'An unknown error prevented your changes from being saved. Please refresh the page and try again.'\n          })\n\n          if (!flashVisible) setFlashVisible(true)\n      })\n  }\n\n  useEffect(fetchLists, [])\n\n  useEffect(() => {\n    return () => (mountedRef.current = false)\n  }, [])\n\n  return(\n    <DashboardLayout title='Your Shopping Lists'>\n      {flashVisible && <div className={styles.flash}><FlashMessage {...flashProps} /></div>}\n      {shoppingLists && loadingState === DONE && <ShoppingListPageContent lists={shoppingLists} onSubmitEditForm={updateList} />}\n      {loadingState === LOADING && <Loading className={styles.loading} type='bubbles' color={YELLOW.schemeColor} height='15%' width='15%' />}\n      {(loadingState === ERROR || (loadingState === DONE && !shoppingLists)) && <p className={styles.error}>There was an error loading your lists. It may have been on our end. We're sorry!</p>}\n    </DashboardLayout>\n  )\n}\n\nexport default ShoppingListPage\n","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useCookies } from 'react-cookie'\nimport { sessionCookieName } from '../../utils/config'\nimport isStorybook from '../../utils/isStorybook'\nimport paths from '../../routing/paths'\nimport styles from './homePage.module.css'\n\nconst HomePage = () => {\n  const [cookies, , ,] = useCookies([sessionCookieName])\n\n  return(!isStorybook() && !!cookies[sessionCookieName] ?\n    <Redirect to={paths.dashboard.main} /> :\n    <div className={styles.root}>\n      <div className={styles.container}>\n        <h1 className={styles.header}>Skyrim Inventory Management</h1>\n        <Link className={styles.login} to={paths.login}>Log in with Google</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport GoogleLogin from 'react-google-login'\nimport { useCookies } from 'react-cookie'\nimport {\n  googleClientId,\n  frontendBaseUri,\n  sessionCookieName\n} from '../../utils/config'\nimport { authorize } from '../../utils/simApi'\nimport isStorybook from '../../utils/isStorybook'\nimport paths from '../../routing/paths'\nimport styles from './loginPage.module.css'\nimport logOutWithGoogle from '../../utils/logOutWithGoogle'\n\nconst LoginPage = () => {\n  const [cookies, setCookie, removeCookie] = useCookies([sessionCookieName])\n\n  const [loginErrorMessage, setLoginErrorMessage] = useState(null)\n\n  const successCallback = (resp) => {\n    const { tokenId } = resp\n\n    if (cookies[sessionCookieName] !== tokenId) {\n      authorize(tokenId)\n      .then(response => {\n        if (response.status === 204) {\n          setCookie(sessionCookieName, tokenId)\n        }\n      })\n      .catch(error => {\n        console.error('Error from /auth/verify_token: ', error.message)\n\n        logOutWithGoogle(() => {\n          cookies[sessionCookieName] && removeCookie(sessionCookieName)\n          return <Redirect to={paths.home} />\n        })\n      })\n    }\n  }\n\n  const failureCallback = (resp) => {\n    console.log('Login failure: ', resp)\n    cookies[sessionCookieName] && removeCookie(sessionCookieName)\n    setLoginErrorMessage('Something went wrong! Please try logging in again.')\n  }\n\n  return(cookies[sessionCookieName] && !isStorybook() ?\n    <Redirect to={paths.dashboard.main} /> :\n    <div className={styles.root}>\n      {loginErrorMessage ?\n      <p className={styles.errorMessage}>{loginErrorMessage}</p> :\n      null}\n      <div className={styles.container}>\n        <GoogleLogin\n          className={styles.button}\n          clientId={googleClientId[process.env.NODE_ENV]}\n          buttonText='Log In With Google'\n          onSuccess={successCallback}\n          onFailure={failureCallback}\n          isSignedIn={true}\n          redirectUri={`${frontendBaseUri[process.env.NODE_ENV]}${paths.dashboard.main}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Helmet } from 'react-helmet-async'\nimport { DashboardProvider } from '../contexts/dashboardContext'\nimport DashboardPage from '../pages/dashboardPage/dashboardPage'\nimport ShoppingListPage from '../pages/shoppingListPage/shoppingListPage'\nimport HomePage from '../pages/homePage/homePage'\nimport LoginPage from '../pages/loginPage/loginPage'\nimport paths from './paths'\n\nconst siteTitle = 'Skyrim Inventory Management |'\n\nconst pages = [\n  {\n    pageId: 'home',\n    title: `${siteTitle} Home`,\n    description: 'Manage your inventory across multiple properties in Skyrim',\n    Component: HomePage,\n    path: paths.home,\n    useDashboardContext: false\n  },\n  {\n    pageId: 'login',\n    title: `${siteTitle} Login`,\n    description: 'Log into Skyrim Inventory Management using your Google account',\n    Component: LoginPage,\n    path: paths.login,\n    useDashboardContext: false\n  },\n  {\n    pageId: 'dashboard',\n    title: `${siteTitle} Dashboard`,\n    description: 'Skyrim Inventory Management User Dashboard',\n    Component: DashboardPage,\n    path: paths.dashboard.main,\n    useDashboardContext: true\n  },\n  {\n    pageId: 'shoppingLists',\n    title: `${siteTitle} Manage Shopping Lists`,\n    description: 'Manage Skyrim Shopping Lists',\n    Component: ShoppingListPage,\n    path: paths.dashboard.shoppingLists,\n    useDashboardContext: true\n  }\n]\n\nconst PageRoutes = () => (\n  <Switch>\n    {pages.map(\n      ({ pageId, title, description, Component, path, useDashboardContext }) => {\n        return(\n          <Route exact path={path} key={pageId}>\n            <Helmet>\n              <html lang='en' />\n\n              <title>{title}</title>\n              <meta name='description' content={description} />\n            </Helmet>\n            {useDashboardContext ? <DashboardProvider><Component /></DashboardProvider> : <Component />}\n          </Route>\n        )\n      }\n    )}\n  </Switch>\n)\n\nexport default PageRoutes\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { HelmetProvider } from 'react-helmet-async'\nimport PageRoutes from './routing/pageRoutes'\n\nconst App = () => {\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <HelmetProvider>\n        <PageRoutes />\n      </HelmetProvider>\n    </Router>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"dashboardHeader_root__3lzne\",\"bar\":\"dashboardHeader_bar__1XEWl\",\"headerContainer\":\"dashboardHeader_headerContainer__1ZVqS\",\"header\":\"dashboardHeader_header__cB1mg\",\"headerLink\":\"dashboardHeader_headerLink__dHHDn\",\"profile\":\"dashboardHeader_profile__A3WxH\",\"profileText\":\"dashboardHeader_profileText__1HPKf\",\"textTop\":\"dashboardHeader_textTop__2UNgU\",\"textBottom\":\"dashboardHeader_textBottom__1vLtl\",\"avatar\":\"dashboardHeader_avatar__2BhRu\",\"logoutDropdown\":\"dashboardHeader_logoutDropdown__37Dm5\",\"hidden\":\"dashboardHeader_hidden__Fkjhq\",\"bp\":\"dashboardHeader_bp__2hS3f\"};"],"sourceRoot":""}