{"version":3,"sources":["pages/home.module.css","pages/login.module.css","pages/logout.module.css","pages/home.js","utils/config.js","routing/paths.js","pages/login.js","pages/logout.js","routing/pageRoutes.js","App.js","index.js"],"names":["module","exports","HomePage","className","styles","root","header","login","to","googleClientId","backendBaseUri","frontendBaseUri","sessionCookieName","paths","home","logout","LoginPage","useCookies","cookies","setCookie","removeCookie","button","clientId","buttonText","onSuccess","qc","backendUri","fetch","headers","id_token","then","response","ok","catch","error","console","log","onFailure","resp","redirectUri","isSignedIn","LogoutPage","onLogoutSuccess","PageRoutes","siteTitle","pages","pageId","title","description","splash","Component","path","pageProps","map","exact","lang","style","splashStyles","name","content","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a4374f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"home_root__FVET7\",\"header\":\"home_header__2rWYK\",\"login\":\"home_login__PpxdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"login_root__3wNY7\",\"button\":\"login_button__CN8ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"logout_root__3YWyZ\",\"button\":\"logout_button__3gpQm\"};","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './home.module.css'\n\nconst HomePage = () => {\n  return(\n    <div className={styles.root}>\n      <h1 className={styles.header}>Skyrim Inventory Management</h1>\n      <Link className={styles.login} to='/login'>Log in with Google</Link>\n    </div>\n  )\n}\n\nexport default HomePage\n","export const googleClientId = {\n  development: '891031345873-ir73kc1ru0ncv564iesac94kjaap5nf4.apps.googleusercontent.com',\n  production: '891031345873-gf3loovttd7bfvrq4ilqdduvvibb0tub.apps.googleusercontent.com'\n}\n\nexport const backendBaseUri = {\n  development: 'http://localhost:3000',\n  production: 'https://sim-api.danascheider.com'\n}\n\nexport const frontendBaseUri = {\n  development: 'http://localhost:3001',\n  production: 'https://sim.danascheider.com'\n}\n\nexport const sessionCookieName = '_sim_google_session'\n","const paths = {\n  home: '/',\n  login: '/login',\n  logout: '/logout'\n}\n\nexport default paths\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport GoogleLogin from 'react-google-login'\nimport { useCookies } from 'react-cookie'\nimport {\n  googleClientId,\n  frontendBaseUri,\n  backendBaseUri,\n  sessionCookieName\n} from '../utils/config'\nimport paths from '../routing/paths'\nimport styles from './login.module.css'\n\nconst LoginPage = () => {\n  const [cookies, setCookie, removeCookie] = useCookies([sessionCookieName])\n\n  const successCallback = ({ qc }) => {\n    const backendUri = `${backendBaseUri[process.env.NODE_ENV]}/auth/verify_token`\n\n    if (!cookies[sessionCookieName]) {\n      fetch(backendUri, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${qc.id_token}`\n        }\n      })\n      .then(response => {\n        if (response.ok === true) {\n          setCookie(sessionCookieName, qc.id_token)\n        }\n      })\n      .catch(error => console.log(error))\n    }\n  }\n\n  const failureCallback = (resp) => {\n    console.log('Login failure: ', resp)\n\n    if (!!cookies[sessionCookieName]) {\n      removeCookie(sessionCookieName)\n    }\n  }\n\n  return(!!cookies[sessionCookieName] ?\n    <Redirect to={paths.logout} /> :\n    <div className={styles.root}>\n      <GoogleLogin\n        className={styles.button}\n        clientId={googleClientId[process.env.NODE_ENV]}\n        buttonText='Log In with Google'\n        onSuccess={successCallback}\n        onFailure={failureCallback}\n        redirectUri={`${frontendBaseUri[process.env.NODE_ENV]}/dashboard`}\n        isSignedIn={true}\n      />\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport GoogleLogout from 'react-google-login'\nimport { useCookies } from 'react-cookie'\nimport paths from '../routing/paths'\nimport { frontendBaseUri, googleClientId, sessionCookieName } from '../utils/config'\nimport styles from './logout.module.css'\n\nconst LogoutPage = () => {\n  const [cookies, _, removeCookie] = useCookies([sessionCookieName])\n\n  const successCallback = () => {\n    console.log('Logout succeeded')\n    removeCookie(sessionCookieName)\n  }\n\n  const failureCallback = (resp) => {\n    console.log('Unable to log out: ', resp)\n  }\n\n  return(!!cookies[sessionCookieName] ?\n    <div className={styles.root}>\n      <GoogleLogout\n        className={styles.button}\n        buttonText='Log Out'\n        clientId={googleClientId[process.env.NODE_ENV]}\n        redirectUri={`${frontendBaseUri[process.env.NODE_ENV]}/`}\n        isSignedIn={false}\n        onLogoutSuccess={successCallback}\n        onFailure={failureCallback}\n      />\n    </div> :\n    <Redirect to={paths.login} />\n  )\n}\n\nexport default LogoutPage\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Helmet } from 'react-helmet-async'\nimport HomePage from '../pages/home'\nimport LoginPage from '../pages/login'\nimport LogoutPage from '../pages/logout'\nimport paths from './paths'\nimport splashStyles from '../splash.css'\n\nconst PageRoutes = () => {\n  const siteTitle = 'Skyrim Inventory Management |'\n  \n  const pages = [\n    {\n      pageId: 'home',\n      title: `${siteTitle} Home`,\n      description: 'Manage your inventory across multiple properties in Skyrim',\n      splash: true,\n      Component: HomePage,\n      path: paths.home,\n      pageProps: {}\n    },\n    {\n      pageId: 'login',\n      title: `${siteTitle} Login`,\n      description: 'Log into Skyrim Inventory Management using your Google account',\n      splash: false,\n      Component: LoginPage,\n      path: paths.login,\n      pageProps: {}\n    },\n    {\n      pageId: 'logout',\n      title: `${siteTitle} Logout`,\n      description: 'Log out of Skyrim Inventory Management with your Google account',\n      splash: false,\n      Component: LogoutPage,\n      path: paths.logout,\n      pageProps: {}\n    }\n  ]\n\n  return(\n    <Switch>\n      {pages.map(\n        ({ pageId, title, description, splash, Component, path, pageProps }) => {\n          return(\n            <Route exact path={path} key={pageId}>\n              <Helmet>\n                <html lang=\"en\" style={splash ? splashStyles : null} />\n\n                <title>{title}</title>\n                <meta name='description' content={description} />\n              </Helmet>\n              <Component {...pageProps} />\n            </Route>\n          )\n        }\n      )}\n    </Switch>\n  )\n}\n\nexport default PageRoutes\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { HelmetProvider } from 'react-helmet-async'\nimport PageRoutes from './routing/pageRoutes'\n\nconst App = () => {\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <HelmetProvider>\n        <PageRoutes />\n      </HelmetProvider>\n    </Router>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}